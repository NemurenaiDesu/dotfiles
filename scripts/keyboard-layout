#!/usr/bin/env python

import subprocess
import json
import os
import sys

variables = os.path.expanduser("/tmp/keyboard-layout-status")


def init():
    set_layout("us")


def set(layout):
    set_layout(layout)


def shell_exec(command):
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return result.stdout
    except subprocess.CalledProcessError as e:
        return f"Error: {e}\nCommand: {e.cmd}\nOutput: {e.output}"


def get_keyboard_names():
    try:
        command_output = subprocess.check_output(["hyprctl", "-j", "devices"])
        device_info = json.loads(command_output)
        return [keyboard.get("name") for keyboard in device_info.get("keyboards", []) if "keyboard" in keyboard.get("name", "").lower()]

    except subprocess.CalledProcessError as e:
        print(f"Error executing hyprctl: {e}")
        return []


def set_layout(layout):
    shell_exec(f"hyprctl keyword input:kb_layout us,{layout}")
    try:
        keyboard_names = get_keyboard_names()
        for keyboard_name in keyboard_names:
            shell_exec(f"hyprctl switchxkblayout {keyboard_name} 1 &")
            print(f"hyprctl switchxkblayout {keyboard_name} 1 &")
    except subprocess.CalledProcessError as e:
        print(f"Error executing hyprctl: {e}")
    save_current_layout(layout)


def save_current_layout(layout):
    with open(variables, 'w') as file:
        file.write(f"{layout.upper()}")


if __name__ == "__main__":
    action = sys.argv[1]

    if action == "init":
        init()
    elif action == "set":
        set(sys.argv[2])
    else:
        print("Unknown action")
